###########
# BUILDER #
###########

# Pull official base image
FROM python:3.9-alpine as BUILDER

# Set working dir
WORKDIR /usr/src/app

# Set env variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Install psycopg2 dependencies
RUN apk update \
  && apk add postgresql-dev \
  && apk add gcc \
  && apk add python3-dev \
  && apk add musl-dev \
  && apk add libpq \
  && apk add jpeg-dev \
  && apk add zlib-dev

# Lint
RUN pip install --upgrade pip
RUN pip install flake8
COPY . .
RUN flake8 --ignore=E501,F401 .

# Install dependencies
COPY requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# Pull official base image
FROM python:3.9-alpine

# Create directory for the app user
RUN mkdir -p /home/app

# Create the app user
RUN addgroup -S app && adduser -S app -G app

# Create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir ${APP_HOME}
RUN mkdir ${APP_HOME}/staticfiles
RUN mkdir ${APP_HOME}/mediafiles
WORKDIR ${APP_HOME}

# Install dependencies
RUN apk update \
  && apk add libpq \
  && apk add jpeg-dev \
  && apk add zlib-dev

COPY --from=BUILDER /usr/src/app/wheels /wheels
COPY --from=BUILDER /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

# Copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh ${APP_HOME}

# Copy project
COPY . ${APP_HOME}

# chown all the files to the app user
RUN chown -R app:app ${APP_HOME}

# Change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT [ "/home/app/web/entrypoint.prod.sh" ]
